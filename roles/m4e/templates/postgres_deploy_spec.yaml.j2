{% macro metadata() %}{% include 'metadata.j2' ignore missing %}{% endmacro %}
replicas: {{ postgres_size }}
selector:
  matchLabels:
    app: '{{ meta.name }}-{{ name }}'
template:
  {{ metadata() | indent(width=2) }}
  spec:
    containers:
    - image: '{{ postgres_image }}'
      name: '{{ meta.name }}-{{ name }}'
      env:
        - name: POSTGRESQL_DATABASE
          value: '{{ database_name }}'
        - name: POSTGRESQL_USER
          value: '{{ database_user }}'
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: '{{ meta.name }}-{{ name }}'
              key: database_password
      ports:
      - containerPort: 5432
        name: postgresql
      imagePullPolicy: IfNotPresent
{% if postgres_readiness_probe %}
      readinessProbe:
        exec:
          command: {{ postgres_readiness_command }}
        initialDelaySeconds: {{ postgres_readiness_initial }}
        periodSeconds: {{ postgres_readiness_period }}
        timeoutSeconds: {{ postgres_readiness_timeout }}
        successThreshold: {{ postgres_readiness_success }}
        failureThreshold: {{ postgres_readiness_failure }}
{% endif %}
{% if postgres_liveness_probe %}
      livenessProbe:
        exec:
          command: {{ postgres_liveness_command }}
        initialDelaySeconds: {{ postgres_liveness_initial }}
        periodSeconds: {{ postgres_liveness_period }}
        timeoutSeconds: {{ postgres_liveness_timeout }}
        successThreshold: {{ postgres_liveness_success }}
        failureThreshold: {{ postgres_liveness_failure }}
{% endif %}
{% if postgres_resource_requests or postgres_resource_limits %}
      resources:
{% if postgres_resource_requests %}
        requests:
          cpu: '{{ postgres_resource_requests_cpu }}'
          memory: '{{ postgres_resource_requests_memory }}'
{% endif %}
{% if postgres_resource_limits %}
        limits:
          cpu: '{{ postgres_resource_limits_cpu }}'
          memory: '{{ postgres_resource_limits_memory }}'
{% endif %}
{% endif %}
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgres-data
    volumes:
    - name: postgres-data
      persistentVolumeClaim:
        claimName: '{{ meta.name }}-{{ name }}'
