---
- name: moodle resource definitions
  vars:
    name: moodle
    k8s_state: "{{ moodle_state }}"
    component: moodle
    metadata_app: "{{ moodle_appname }}"
  block:
    - name: moodledata pvc resource definition
      vars:
        kind: PersistentVolumeClaim
        k8s_state: "{{ moodle_pvc_state | default(moodle_state) }}"
        template: "{{ pvc_template }}"
        metadata_name: "{{ moodle_data_pvc }}"
        pvc_spec: "{{ moodle_pvc_spec }}"
      import_tasks: k8s/object.yml

    - name: save moodle pvc resource definition task output
      set_fact:
        k8s_moodle_pvc: "{{ k8s_task }}"

    - name: moodle config.php secret resource definition
      vars:
        kind: Secret
        k8s_state: "{{ moodle_secret_state | default(moodle_state) }}"
        template: "{{ secret_template }}"
        metadata_name: "{{ moodle_secret }}"
        secret_data: "{{ moodle_secret_data }}"
      import_tasks: k8s/object.yml

    - name: import new instance task
      import_tasks: moodle/new.yml

    - name: set moodle cronjob spec
      when: moodle_cronjob_spec is not defined
      set_fact:
        moodle_cronjob_spec: "{{ lookup('template', moodle_cronjob_spec_template) }}"

    - name: moodle cronjob resource definition
      vars:
        kind: CronJob
        k8s_state: "{{ moodle_cronjob_state | default(moodle_state) }}"
        template: "{{ cronjob_template }}"
        metadata_name: "{{ moodle_cronjob }}"
        cronjob_spec: "{{ moodle_cronjob_spec }}"
      import_tasks: k8s/object.yml

    - name: remove any remaining jobs and its pods in moodle app
      loop:
        - Job
        - Pod
      vars:
        k8s_definition: "{{ lookup('k8s', kind=item, namespace=meta_namespace,
          label_selector='app=' + moodle_appname ) }}"
      when:
        - "(moodle_cronjob_state | default(moodle_state)) == 'absent'"
        - (k8s_definition | length) > 0
      k8s:
        definition: "{{ k8s_definition }}"
        state: absent
